/**
Гирлянда состоит из  лампочек на общем проводе. Один её конец закреплён на заданной высоте  мм ().
 Благодаря силе тяжести гирлянда прогибается: высота каждой неконцевой лампы на 1 мм меньше, чем средняя высота ближайших соседей ( для ).

Требуется найти минимальное значение высоты второго конца  (), такое что для любого  при высоте второго конца  для всех лампочек выполняется условие .
 Обратите внимание на то, что при данном значении высоты либо ровно одна, либо две соседних лампочки будут иметь нулевую высоту.

Подсказка: для решения этой задачи можно использовать двоичный поиск (метод дихотомии).
*/
#include <iostream>
#include "edx-io.hpp"

void print(double* h, int n) {
    for (int i = 0; i < n; i++) {
        std::cout << h[i] << " ";
    }
    std::cout << std::endl;
}

double height(double* const h, int n) {
    double l = 0;
    double r = h[0];
    double epsilon = 10e-12;
    bool pos;
    while (r - l > epsilon) {
        h[1] = (l + r) / 2;
        pos = true;
        for (int i = 2; i < n; i++) {
            h[i] = 2 * h[i - 1] - h[i - 2] + 2;
            if (h[i] < 0) {
                pos = false;
                break;
            }
        }
        if (pos) {
            r = h[1];
        } else {
            l = h[1];
        }
    }
    return h[n - 1];
}

int main() {
    int n;
    io >> n;
    auto* h = new double[n];
    io >> h[0];
    io << height(h, n);
    delete[] h;
    return 0;
}
